name: ci

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*'
  workflow_dispatch:
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.30.7
      - name: Prepare
        id: prepare
        env: 
          REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          URL="https://api.github.com/repos/${REPOSITORY}/pulls/${PR_NUMBER}/files"
          response=$(curl -H "authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
                          -H "Accept: application/vnd.github.v3+json" -s -X GET -G $URL)
          FILES=$(echo -E "${response}" | jq -r '.[] | select(.filename?|match("[a-z0-9-]+/.+")) | .filename')
          [ "${FILES}" = "null" ] && (msg "No files changed. Skip"; exit 0)
          app=$(echo "${FILES}" | awk -F/ '{print $1}' | grep -v .github | sort | uniq | sort | head -1)

          echo "::set-output name=app::${app}"
          echo "::set-output name=arch::$(yq -I=0 -o=json .arch ${app}/.matrix.yaml)"
          echo "::set-output name=version::$(yq -I=0 -o=json .version ${app}/.matrix.yaml)"
          echo "::set-output name=base::$(yq -I=0 -o=json '.base | keys' ${app}/.matrix.yaml)"
    outputs:
      app: ${{ steps.prepare.output.app }}
      base: ${{ steps.prepare.output.base }}
      arch: ${{ steps.prepare.output.arch }}
      version: ${{ steps.prepare.output.version }}

  test:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Checkout
        run: |
          echo ===${{ steps.prepare.output.version }}===
  build:
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        base: ${{ fromJson(needs.prepare.outputs.base) }}
        version: ${{ fromJson(needs.prepare.outputs.version) }}
        registry: ["docker.io", "ghcr.io"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: chrisdickinson/setup-yq@latest
        with:
          yq-version: v4.30.7
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_SX }}
          password: ${{ secrets.DOCKERHUB_TOKEN_SX }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Gen Docker Context
        run: |
          app=${{ needs.prepare.outputs.app }}
          for base in ${{ needs.prepare.outputs.base }}; do
            target_files=$(yq ".base.${base} | keys | .[]" $app/.matrix.yaml)
            for target_file in ${target_files}; do
              source_file=$(yq . ".base.${base}.${target_file}")
              mkdir -p ${app}/${base}
              cp -r ${app}/${source_file} ${app}/${base}/${target_file}
            done
          done
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ needs.prepare.outputs.app }}/${{ matrix.base }}
          push: true
          tags: ${{ matrix.registry }}/${{ github.repository_owner }}/${{ needs.prepare.outputs.app }}:${{ matrix.version }}-${{ matrix.base }}
